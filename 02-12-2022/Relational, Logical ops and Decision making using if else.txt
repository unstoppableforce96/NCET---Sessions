Operators
1. Arithmetic
2. Relational or Comparison (Binary Operators)
Decision making
> --> greater than
10 > 20 --> False (0)
20 > 10 --> True (1)
>= --> greter than or equals to
< --> less than
<= --> less than or equals to
== --> equals to
!= --> not equals to
3. Logical
&& --> Logical AND
True, if both operands are true, in any other case false
|| --> Logical OR
True, even if one of the operands is true, in any other case false
! --> Logical NOT
Inverse Truth, 
If the expression is true, it gives false and vice versa
4. Assignment







Decision Making:
if, else else if

Syntax of if:
if(condition)
{
	block of statements;
}


Syntax of else:
if (condition)
{
	block of statements;
}
else 
{
	
}

else should follow either an if statement or an else if statment.
You cannot write an else without previous if
else doesn't take any condition
if if statement fails the else belong to that if get executed automaticatilly.


Logical Operators in Decision making
Two possible outcomes, but those outcomes are dependant on multiple conditions
5 different subjects
eng, mat, phy, che, cs
>=35 in every subject
if (eng >= 35 && mat >= 35 && phy >= 35 && che >= 35 && cs >= 35)
{
	printf("PASS");
}
else
{
	printf("FAIL");
}

PASS / FAIL


5 subjects
>=35 MARKS OUT OF 100 (PASS CRITEIRA IN EACH SUBJECT)
45 55 65 35 29
and and and and and &&


PASSED / FAILED


character (single alphabet lowercase) say vowel or consonant
ch == 'a' or ch == 'e' or ch == 'i' or ch == 'o' or ch == 'u'
||

Logical operators are the combination of two or more relational expressions
a, b, c
a > b && a > c